syntax = "proto3";
package stock;

//import "envoyproxy/protoc-gen-validate/validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


service Stock {
  //특정 소유하고 있는 주식,코인 정보
  rpc Account(AccountRequest) returns (AccountReply) {}
  rpc Tick(TickRequest) returns (stream TickReply) {}
  rpc Chart(ChartRequest) returns (ChartReply) {}
  //모든 소유하고 있는 주식, 코인정보
  rpc Accounts(google.protobuf.Empty) returns (AccountsReply) {}
  rpc Buy(BuyRequest) returns (BuyReply){}
  rpc Sell(SellRequest) returns (SellReply){}
  rpc OrderList(OrderListRequest) returns (OrderListReply){}
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderReply){}
}

enum OrderType{
  MarketOrder = 0;
  LimitOrder = 1;
}

message Account {
  string code = 1;
  double balance = 2;
  double avgByPrice = 3;
  double totalPrice = 4;
}

message AccountRequest {
  string account = 1;
}

message AccountReply {
  string info = 1;
}

message TickRequest {
  string codes = 1;
}

message TickReply{
  double price = 1;
  google.protobuf.Timestamp date = 2;
  double volume = 3;
}

message ChartRequest {
  string code = 1;
  google.protobuf.Timestamp to = 2;
}

message ChartReply {
  repeated ChartData data = 1;
}

message AccountsReply{
  repeated Account accounts = 1;
}


message BuyRequest {
  string code = 1;
  OrderType otype = 2;
  double volume = 3;
  double price = 4;
}

message BuyReply {
  string id = 1;
  string code = 2;
  double avgPrice = 3;
  double volume = 4;
  double fee = 5;
  double price = 6;
  google.protobuf.Timestamp createdAt = 7;
}

message SellRequest{

}

message SellReply {

}

message ChartData {
  double open = 1;
  double high = 2;
  double low = 3;
  double close = 4;
  double volume = 5;
  google.protobuf.Timestamp date = 6;
}

message OrderListRequest {

}

message OrderListReply {

}

message CancelOrderRequest{
  string id = 1;
}

message CancelOrderReply {

}